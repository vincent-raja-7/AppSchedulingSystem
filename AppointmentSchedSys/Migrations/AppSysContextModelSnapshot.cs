// <auto-generated />
using System;
using AppointmentSchedSys.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppointmentSchedSys.Migrations
{
    [DbContext(typeof(AppSysContext))]
    partial class AppSysContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppointmentSchedSys.Models.AppointmentEntries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Rescheduled_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Rescheduled_Slot")
                        .HasColumnType("int");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppointmentEntries");
                });

            modelBuilder.Entity("AppointmentSchedSys.Models.Bookings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Slot_1")
                        .HasColumnType("int");

                    b.Property<int?>("Slot_2")
                        .HasColumnType("int");

                    b.Property<int?>("Slot_3")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Slot_1");

                    b.HasIndex("Slot_2");

                    b.HasIndex("Slot_3");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("AppointmentSchedSys.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Key")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DOB = new DateTime(2000, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@company.com",
                            Key = new byte[] { 124, 67, 3, 238, 165, 87, 51, 206, 97, 61, 61, 237, 236, 193, 174, 5, 128, 191, 153, 55, 254, 152, 237, 74, 129, 48, 4, 41, 136, 183, 185, 145, 219, 55, 105, 74, 131, 159, 159, 186, 3, 150, 44, 171, 10, 34, 132, 172, 73, 240, 166, 110, 217, 173, 157, 38, 134, 170, 166, 35, 207, 105, 200, 230, 148, 161, 62, 100, 48, 108, 204, 161, 21, 139, 112, 107, 183, 229, 196, 133, 56, 96, 125, 140, 101, 126, 231, 190, 126, 23, 22, 110, 21, 30, 148, 48, 28, 97, 49, 58, 224, 195, 239, 148, 82, 95, 174, 112, 54, 254, 94, 176, 128, 196, 143, 195, 37, 201, 89, 236, 47, 160, 140, 160, 195, 22, 243, 140 },
                            Name = "Admin",
                            Password = "admin@pass",
                            PasswordHash = new byte[] { 0, 92, 167, 98, 111, 91, 176, 109, 228, 3, 237, 249, 243, 129, 3, 8, 79, 220, 166, 72, 246, 179, 215, 246, 108, 29, 70, 24, 110, 22, 195, 68, 11, 142, 228, 90, 132, 136, 177, 1, 193, 194, 229, 21, 194, 173, 40, 209, 19, 197, 80, 34, 137, 45, 108, 115, 60, 167, 2, 192, 161, 163, 51, 208 },
                            Phone = "9543457896",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("AppointmentSchedSys.Models.AppointmentEntries", b =>
                {
                    b.HasOne("AppointmentSchedSys.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppointmentSchedSys.Models.Bookings", b =>
                {
                    b.HasOne("AppointmentSchedSys.Models.User", "User_1")
                        .WithMany()
                        .HasForeignKey("Slot_1");

                    b.HasOne("AppointmentSchedSys.Models.User", "User_2")
                        .WithMany()
                        .HasForeignKey("Slot_2");

                    b.HasOne("AppointmentSchedSys.Models.User", "User_3")
                        .WithMany()
                        .HasForeignKey("Slot_3");
                });
#pragma warning restore 612, 618
        }
    }
}
